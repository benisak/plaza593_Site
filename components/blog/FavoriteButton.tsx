// components/FavoriteButton.tsx
"use client";

import React, { useState } from 'react';

interface FavoriteButtonProps {
  onToggle?: (isFavorited: boolean) => void;
  initialFavorited?: boolean;
}

const HeartIcon: React.FC<{ isFavorited: boolean }> = ({ isFavorited }) => {
  if (isFavorited) {
    // Filled heart when favorited with inner colored shape
    return (
      <svg 
        xmlns="http://www.w3.org/2000/svg" 
        width="20" 
        height="16" 
        viewBox="0 0 20 16" 
        fill="none"
        className="w-[19px] h-4 flex-shrink-0"
        style={{ aspectRatio: '19/16' }}
      >
        <path d="M18.2044 2.959L14.4181 0.855469L10.0007 2.11102L6.84536 0.855469L4.32112 1.27618L1.79688 3.37314V7.16607L6.00394 12.2145L10.211 15.1595L12.7352 13.4767L18.2044 7.16607V2.959Z" fill="#2F88FF"/>
        <path d="M12.5053 0.155064C13.5831 -0.107218 14.7153 -0.0356691 15.751 0.361309C16.7867 0.758299 17.6769 1.46151 18.3032 2.37692C18.9289 3.29147 19.2617 4.37488 19.2572 5.48292L19.2531 5.69738C19.1627 7.89597 17.6977 9.49431 16.4864 10.7056C16.4832 10.7088 16.4799 10.7123 16.4766 10.7155L11.8677 15.1731C11.6393 15.4243 11.3631 15.6279 11.0542 15.7697C10.7288 15.9191 10.3753 15.9975 10.0173 15.9998C9.65914 16.002 9.30432 15.9281 8.97699 15.7828C8.6609 15.6425 8.37771 15.4382 8.14379 15.1838L3.5267 10.7146C3.5235 10.7115 3.51999 10.7087 3.51684 10.7056C2.30628 9.49503 0.840684 7.90435 0.750202 5.6982L0.746094 5.48292C0.746114 4.37635 1.08211 3.29528 1.70912 2.38349C2.3361 1.47185 3.22486 0.772094 4.25801 0.376099C5.29128 -0.0199287 6.42051 -0.093394 7.4963 0.165746C8.43965 0.393032 9.30302 0.866516 10 1.53469C10.6956 0.861956 11.5603 0.385094 12.5053 0.155064ZM2.44042 5.76969C2.55535 7.18541 3.51187 8.32016 4.70665 9.51497H4.70583L9.33114 13.9924L9.37387 14.0359C9.45334 14.1249 9.55078 14.1962 9.65982 14.2446C9.76891 14.293 9.88722 14.3177 10.0066 14.3169C10.1259 14.3162 10.244 14.2903 10.3525 14.2405C10.4609 14.1907 10.5576 14.1185 10.636 14.0285L10.6853 13.9759L15.2966 9.51497L15.7601 9.04003C16.8056 7.93298 17.5742 6.83371 17.5744 5.48292V5.47881C17.578 4.71145 17.3478 3.96098 16.9145 3.32762C16.4812 2.69429 15.8652 2.20789 15.1487 1.93321C14.4321 1.65856 13.6487 1.60795 12.903 1.78941C12.1574 1.97091 11.4847 2.3756 10.9745 2.94882C10.9699 2.95399 10.9653 2.95938 10.9606 2.96443C10.8378 3.09571 10.6891 3.20019 10.5242 3.27174C10.4004 3.32546 10.2693 3.35992 10.1356 3.37363L10.0016 3.38021C9.82187 3.38021 9.64395 3.3433 9.47904 3.27174C9.31417 3.20019 9.1655 3.09571 9.04272 2.96443C9.03901 2.96046 9.03568 2.95615 9.03204 2.95211C8.52001 2.38228 7.84667 1.98114 7.10189 1.80174C6.35715 1.62235 5.57561 1.67303 4.86031 1.94718C4.14497 2.22135 3.5294 2.70625 3.09531 3.33748C2.66134 3.96866 2.42893 4.71694 2.42892 5.48292L2.44042 5.76969Z" fill="#2F88FF"/>
      </svg>
    );
  }

  // Original heart when not favorited
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg" 
      width="20" 
      height="16" 
      viewBox="0 0 20 16" 
      fill="none"
      className="w-[19px] h-4 flex-shrink-0"
      style={{ aspectRatio: '19/16' }}
    >
      <path 
        d="M12.5698 0.155066C13.676 -0.107219 14.8381 -0.0356695 15.9012 0.361313C16.9643 0.758308 17.8779 1.46153 18.5208 2.37695C19.163 3.29151 19.5046 4.37493 19.5 5.48298L19.4957 5.69745C19.4029 7.89606 17.8993 9.49442 16.656 10.7057C16.6527 10.7089 16.6493 10.7124 16.6459 10.7156L11.9153 15.1733C11.6808 15.4245 11.3974 15.6281 11.0804 15.7699C10.7463 15.9192 10.3835 15.9977 10.016 16C9.64843 16.0022 9.28424 15.9283 8.94827 15.783C8.62383 15.6427 8.33316 15.4384 8.09306 15.184L3.35404 10.7148C3.35075 10.7117 3.34716 10.7089 3.34392 10.7057C2.10138 9.49514 0.597088 7.90444 0.504217 5.69827L0.5 5.48298C0.500021 4.37641 0.844891 3.29532 1.48846 2.38352C2.132 1.47187 3.04422 0.772103 4.10466 0.376103C5.16522 -0.0199289 6.32427 -0.0933951 7.42847 0.165748C8.39674 0.393036 9.28291 0.866526 9.99829 1.5347C10.7123 0.861966 11.5998 0.385099 12.5698 0.155066ZM2.23908 5.76976C2.35703 7.18549 3.33882 8.32026 4.56515 9.51508L9.31177 13.9925L9.35562 14.0361C9.4372 14.1251 9.53721 14.1964 9.64912 14.2448C9.7611 14.2932 9.88253 14.3178 10.005 14.3171C10.1276 14.3163 10.2487 14.2905 10.3601 14.2407C10.4714 14.1909 10.5707 14.1186 10.6511 14.0287L10.7017 13.9761L15.4348 9.51508L15.9105 9.04013C16.9836 7.93307 17.7725 6.83379 17.7727 5.48298V5.47887C17.7764 4.7115 17.5401 3.96103 17.0954 3.32766C16.6507 2.69432 16.0184 2.20792 15.283 1.93323C14.5475 1.65858 13.7433 1.60797 12.978 1.78943C12.2127 1.97093 11.5222 2.37562 10.9986 2.94885C10.9938 2.95402 10.9891 2.95941 10.9842 2.96447C10.8582 3.09574 10.7056 3.20022 10.5364 3.27178C10.4093 3.3255 10.2747 3.35996 10.1374 3.37367L9.99998 3.38025C9.81546 3.38025 9.63284 3.34334 9.46358 3.27178C9.29435 3.20022 9.14175 3.09574 9.01574 2.96447C9.01193 2.9605 9.0085 2.95618 9.00477 2.95214C8.47921 2.38231 7.78809 1.98116 7.02364 1.80176C6.25924 1.62237 5.45706 1.67305 4.72287 1.9472C3.98864 2.22137 3.35681 2.70628 2.91126 3.33752C2.46583 3.96871 2.22728 4.71699 2.22727 5.48298L2.23908 5.76976Z" 
        fill="#4B4B4B"
      />
    </svg>
  );
};

const FavoriteButton: React.FC<FavoriteButtonProps> = ({ 
  onToggle,
  initialFavorited = false 
}) => {
  const [isFavorited, setIsFavorited] = useState(initialFavorited);

  const handleToggle = () => {
    const newFavoritedState = !isFavorited;
    setIsFavorited(newFavoritedState);
    onToggle?.(newFavoritedState);
  };

  return (
    <button
      onClick={handleToggle}
      className="flex w-8 h-8 p-[2px_1px] flex-col justify-center items-center gap-[10px] flex-shrink-0 aspect-square rounded-[40px] bg-[#F6F6F6] hover:opacity-80 transition-opacity duration-200"
      aria-label={isFavorited ? "Remove from favorites" : "Add to favorites"}
    >
      <HeartIcon isFavorited={isFavorited} />
    </button>
  );
};

export default FavoriteButton;
